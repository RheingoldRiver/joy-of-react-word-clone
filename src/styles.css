/*
  Theme and global variables
*/
html {
  overflow-y: scroll;

  --game-spacing: 32px;
  --header-height: 4rem;

  --color-success: hsl(150deg 70% 30%);
  --color-warning: hsl(50deg 100% 30%);
  --color-error: hsl(0deg 70% 45%);
  --color-gray-50: hsl(0deg 0% 5%);
  --color-gray-100: hsl(0deg 0% 10%);
  --color-gray-300: hsl(0deg 0% 25%);
  --color-gray-500: hsl(0deg 0% 50%);
  --color-gray-700: hsl(0deg 0% 75%);
  --color-gray-900: hsl(0deg 0% 90%);
  
  --color-incorrect:var(--color-gray-300);
}

/*
  Custom styles
*/
body {
  font-family: sans-serif;
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}

button {
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  text-align: left;
  color: inherit;
}

.app-container {
  display:grid;
  grid-template-areas:". game cheat"
                      ". game .";
  grid-template-columns: 33% 33% 33%;
}

.cheat-mode-wrapper {
  grid-area: cheat;
  justify-self:end;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  grid-area: game;
}

header {
  display: flex;
  flex-direction:column;
  height: var(--header-height);
  border-bottom: 1px solid var(--color-gray-700);
  color: var(--color-gray-300);
}

header .side {
  width: var(--header-height);
  display: grid;
  place-content: center;
}

.total-score {
  display:flex;
  width:100%;
  justify-content: center;
  font-size:25px;
}

h1 {
  flex: 1;
  font-size: 2rem;
  line-height: var(--header-height);
  text-align: center;
}

@media (max-width: 25rem) {
  h1 {
    font-size: 1.25rem;
  }
}

.game-wrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--game-spacing);
  padding: var(--game-spacing) 32px;
  margin: 0 auto;
  min-width: 250px;
  max-width: min(500px, 58vh, 100%);
}

.game-wrapper .sad .guess-input-wrapper,
.game-wrapper .happy .guess-input-wrapper {
  height:unset;
}

.guess-results {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.guess {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
}

.cell {
  position: relative;
  width: 20%;
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
  border: 2px solid var(--color-gray-700);
  border-radius: var(--radius);
  font-size: 2rem;
}

/*
  Round the corners for the 4 cells at the very corners of
  the game board
*/
.guess:first-of-type .cell:first-of-type {
  --radius: 4px 0px 0px 0px;
}
.guess:first-of-type .cell:last-of-type {
  --radius: 0px 4px 0px 0px;
}
.guess:last-of-type .cell:last-of-type {
  --radius: 0px 0px 4px 0px;
}
.guess:last-of-type .cell:first-of-type {
  --radius: 0px 0px 0px 4px;
}

.cell.correct,
.keyboard-cell.correct {
  background: var(--color-success);
  border-color: var(--color-success);
  color: white;
}
.cell.incorrect,
.keyboard-cell.incorrect,
.keyboard-cell.incorrect_cheating {
  background: var(--color-incorrect);
  border-color: var(--color-incorrect);
  color: white;
}
.cell.misplaced,
.keyboard-cell.misplaced,
.keyboard-cell.misplaced_cheating {
  background: var(--color-warning);
  border-color: var(--color-warning);
  color: white;
}

.guess-input-wrapper {
  display: flex;
  flex-direction: column;
  gap: 8px;
  height: 6.75rem;
  margin-bottom:5px;
}

.guess-input-wrapper label {
  font-size: 1.25rem;
}

.guess-input-wrapper input {
  display: block;
  width: 100%;
  font-size: 2rem;
  border: 2px solid var(--color-gray-300);
  border-radius: 4px;
  padding: 8px 16px;
  outline-offset: 4px;
  margin-bottom:3px;
}

.banner {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 32px;
  text-align: center;
  animation: slideUp 750ms cubic-bezier(0, 0.72, 0.24, 1.02);
  border-radius: 4px 4px 0px 0px;
  will-change: transform;
}

.happy.banner {
  background: var(--color-success);
  color: white;
}
.sad.banner {
  background: var(--color-error);
  color: white;
}

.keyboard-container {
  width:100%;
  display:flex;
  flex-direction:column;
  align-items:center;
}

.keyboard-row {
  display:flex;
  flex-direction:row;
  width:100%;
  justify-content: space-around;
}

.keyboard-row:nth-of-type(2) {
  width: 90%;
}

.keyboard-row:nth-of-type(3) {
  width:70%;
}

.keyboard-row:first-of-type .keyboard-cell {
  width:10%;
}

.keyboard-row:nth-of-type(2) .keyboard-cell {
  width: 11.11%;
}

.keyboard-row:nth-of-type(3) .keyboard-cell {
  width: 14.29%;
}

.keyboard-cell {
  text-align:center;
  padding-top:.25em;
  padding-bottom:.25em;
  border-radius:5px;
  margin:3px;
  box-shadow:1px 1px 1px 1px var(--color-gray-50);
}

.game-wrapper.honest-mode .keyboard-cell {
  cursor:auto;
}

.game-wrapper.cheat-mode .keyboard-cell {
  cursor: pointer;
}

.new-game-button {
  outline: 1px solid;
  border-radius: 5px;
  padding: .5em;
  margin-left:.5em;
  cursor:pointer;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}
